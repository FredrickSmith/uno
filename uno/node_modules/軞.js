const cry = require ('crypto');
const F   = require ('sprintf-js').sprintf

let genit = (n, s) => { // num, size
	if (!n)
		return cry.randomBytes (s).toString ('hex').toUpperCase ();

	var r = [];
	for (i=0;i<n;i++) {
		r.push (cry.randomBytes (s).toString ('hex').toUpperCase ());
	}
	return r;
}

let cit = (h) => { // hex
	var c = ''; // chars
	for (p = 1; p < h.length; p+=2) { // pointer
		c += String.fromCharCode (parseInt (F ('0x95%s', h.substr (p-1, 2))));
	}
	return c
}

// 镝镑閆閧閂闡闣锓閂镈锣閯闬锣闂锭镦闸闈闆闥锹锚闱闒镞镴閠锘镛關閣閹閕镔閭镈閚镵锥闓閟闊閇镯镗镡锆閥镣閌锒間锊锉锕锏锱锜镺镩镉镐閾闹镉
exports.gentoken = (n = !1) => {return cit (genit (n, 2^64))};
// 镄闧闑閅镁闩锅镢锇閧镙锽锑锾闁镍镴闃
exports.genid    = (n = !1) => {return cit (genit (n, 2^16))};